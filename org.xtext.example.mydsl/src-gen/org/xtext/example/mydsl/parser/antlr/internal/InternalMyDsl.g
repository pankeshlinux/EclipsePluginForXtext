/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Spec";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSpec
entryRuleSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecRule()); }
	 iv_ruleSpec=ruleSpec 
	 { $current=$iv_ruleSpec.current; } 
	 EOF 
;

// Rule Spec
ruleSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSpecAccess().getVocSpecVocSpecParserRuleCall_0_0()); 
	    }
		lv_vocSpec_0_0=ruleVocSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecRule());
	        }
       		set(
       			$current, 
       			"vocSpec",
        		lv_vocSpec_0_0, 
        		"VocSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecAccess().getInteractionSpecInteractionSpecParserRuleCall_1_0()); 
	    }
		lv_interactionSpec_1_0=ruleInteractionSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecRule());
	        }
       		set(
       			$current, 
       			"interactionSpec",
        		lv_interactionSpec_1_0, 
        		"InteractionSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecAccess().getArchSpecArchSpecParserRuleCall_2_0()); 
	    }
		lv_archSpec_2_0=ruleArchSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecRule());
	        }
       		set(
       			$current, 
       			"archSpec",
        		lv_archSpec_2_0, 
        		"ArchSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecAccess().getNetworkSpecDeploymentSpecParserRuleCall_3_0()); 
	    }
		lv_networkSpec_3_0=ruleDeploymentSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecRule());
	        }
       		set(
       			$current, 
       			"networkSpec",
        		lv_networkSpec_3_0, 
        		"DeploymentSpec");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDeploymentSpec
entryRuleDeploymentSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeploymentSpecRule()); }
	 iv_ruleDeploymentSpec=ruleDeploymentSpec 
	 { $current=$iv_ruleDeploymentSpec.current; } 
	 EOF 
;

// Rule DeploymentSpec
ruleDeploymentSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='devices' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeploymentSpecAccess().getDevicesKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeploymentSpecAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeploymentSpecAccess().getDevicesDeviceParserRuleCall_2_0()); 
	    }
		lv_devices_2_0=ruleDevice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeploymentSpecRule());
	        }
       		add(
       			$current, 
       			"devices",
        		lv_devices_2_0, 
        		"Device");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	 iv_ruleDevice=ruleDevice 
	 { $current=$iv_ruleDevice.current; } 
	 EOF 
;

// Rule Device
ruleDevice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_deviceName_0_0=RULE_ID
		{
			newLeafNode(lv_deviceName_0_0, grammarAccess.getDeviceAccess().getDeviceNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"deviceName",
        		lv_deviceName_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeviceAccess().getColonKeyword_1());
    }
	otherlv_2='location' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getLocationKeyword_2());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeviceAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getDeviceLocationDeviceLocationParserRuleCall_4_0()); 
	    }
		lv_deviceLocation_4_0=ruleDeviceLocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"deviceLocation",
        		lv_deviceLocation_4_0, 
        		"DeviceLocation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='platform' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeviceAccess().getPlatformKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeviceAccess().getColonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getPlatformTypePlatformTypeParserRuleCall_7_0()); 
	    }
		lv_platformType_7_0=rulePlatformType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"platformType",
        		lv_platformType_7_0, 
        		"PlatformType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeviceAccess().getSemicolonKeyword_8());
    }
	otherlv_9='resources' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDeviceAccess().getResourcesKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDeviceAccess().getColonKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getDeviceAbilitiesDeviceAbilitiesParserRuleCall_11_0()); 
	    }
		lv_deviceAbilities_11_0=ruleDeviceAbilities		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"deviceAbilities",
        		lv_deviceAbilities_11_0, 
        		"DeviceAbilities");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDeviceAccess().getSemicolonKeyword_12());
    }
	otherlv_13='protocol' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDeviceAccess().getProtocolKeyword_13());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDeviceAccess().getColonKeyword_14());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getDeviceProtocolDeviceProtocolParserRuleCall_15_0()); 
	    }
		lv_deviceProtocol_15_0=ruleDeviceProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"deviceProtocol",
        		lv_deviceProtocol_15_0, 
        		"DeviceProtocol");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16='database' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDeviceAccess().getDatabaseKeyword_16_0());
    }
	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDeviceAccess().getColonKeyword_16_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getDatabaseNameDatabaseNameParserRuleCall_16_2_0()); 
	    }
		lv_databaseName_18_0=ruleDatabaseName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"databaseName",
        		lv_databaseName_18_0, 
        		"DatabaseName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDeviceAccess().getSemicolonKeyword_16_3());
    }
)*	otherlv_20='description' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDeviceAccess().getDescriptionKeyword_17());
    }
	otherlv_21=':' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDeviceAccess().getColonKeyword_18());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getDeviceDescriptionDeviceDescriptionParserRuleCall_19_0()); 
	    }
		lv_deviceDescription_22_0=ruleDeviceDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"deviceDescription",
        		lv_deviceDescription_22_0, 
        		"DeviceDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDeviceAccess().getSemicolonKeyword_20());
    }
)
;





// Entry rule entryRuleDeviceDescription
entryRuleDeviceDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceDescriptionRule()); }
	 iv_ruleDeviceDescription=ruleDeviceDescription 
	 { $current=$iv_ruleDeviceDescription.current; } 
	 EOF 
;

// Rule DeviceDescription
ruleDeviceDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_devicedescriptionText_0_0=RULE_STRING
		{
			newLeafNode(lv_devicedescriptionText_0_0, grammarAccess.getDeviceDescriptionAccess().getDevicedescriptionTextSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"devicedescriptionText",
        		lv_devicedescriptionText_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleDeviceLocation
entryRuleDeviceLocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceLocationRule()); }
	 iv_ruleDeviceLocation=ruleDeviceLocation 
	 { $current=$iv_ruleDeviceLocation.current; } 
	 EOF 
;

// Rule DeviceLocation
ruleDeviceLocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_regionLabel_0_0=RULE_ID
		{
			newLeafNode(lv_regionLabel_0_0, grammarAccess.getDeviceLocationAccess().getRegionLabelIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regionLabel",
        		lv_regionLabel_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeviceLocationAccess().getColonKeyword_1());
    }
(
(
		lv_regionValue_2_0=RULE_INT
		{
			newLeafNode(lv_regionValue_2_0, grammarAccess.getDeviceLocationAccess().getRegionValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regionValue",
        		lv_regionValue_2_0, 
        		"INT");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeviceLocationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRulePlatformType
entryRulePlatformType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlatformTypeRule()); }
	 iv_rulePlatformType=rulePlatformType 
	 { $current=$iv_rulePlatformType.current; } 
	 EOF 
;

// Rule PlatformType
rulePlatformType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_deviceType_0_0=	'JavaSE' 
    {
        newLeafNode(lv_deviceType_0_0, grammarAccess.getPlatformTypeAccess().getDeviceTypeJavaSEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlatformTypeRule());
	        }
       		setWithLastConsumed($current, "deviceType", lv_deviceType_0_0, "JavaSE");
	    }

)
)
    |(
(
		lv_deviceType_1_0=	'Android' 
    {
        newLeafNode(lv_deviceType_1_0, grammarAccess.getPlatformTypeAccess().getDeviceTypeAndroidKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlatformTypeRule());
	        }
       		setWithLastConsumed($current, "deviceType", lv_deviceType_1_0, "Android");
	    }

)
))
;





// Entry rule entryRuleDatabaseName
entryRuleDatabaseName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseNameRule()); }
	 iv_ruleDatabaseName=ruleDatabaseName 
	 { $current=$iv_ruleDatabaseName.current; } 
	 EOF 
;

// Rule DatabaseName
ruleDatabaseName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_installedDatabase_0_0=	'MySQL' 
    {
        newLeafNode(lv_installedDatabase_0_0, grammarAccess.getDatabaseNameAccess().getInstalledDatabaseMySQLKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseNameRule());
	        }
       		setWithLastConsumed($current, "installedDatabase", lv_installedDatabase_0_0, "MySQL");
	    }

)
)
    |(
(
		lv_installedDatabase_1_0=	'SQLAzure' 
    {
        newLeafNode(lv_installedDatabase_1_0, grammarAccess.getDatabaseNameAccess().getInstalledDatabaseSQLAzureKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseNameRule());
	        }
       		setWithLastConsumed($current, "installedDatabase", lv_installedDatabase_1_0, "SQLAzure");
	    }

)
)
    |(
(
		lv_installedDatabase_2_0=	'MongoDB' 
    {
        newLeafNode(lv_installedDatabase_2_0, grammarAccess.getDatabaseNameAccess().getInstalledDatabaseMongoDBKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseNameRule());
	        }
       		setWithLastConsumed($current, "installedDatabase", lv_installedDatabase_2_0, "MongoDB");
	    }

)
))
;





// Entry rule entryRuleDeviceProtocol
entryRuleDeviceProtocol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceProtocolRule()); }
	 iv_ruleDeviceProtocol=ruleDeviceProtocol 
	 { $current=$iv_ruleDeviceProtocol.current; } 
	 EOF 
;

// Rule DeviceProtocol
ruleDeviceProtocol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_protocolName_0_0=	'mqtt' 
    {
        newLeafNode(lv_protocolName_0_0, grammarAccess.getDeviceProtocolAccess().getProtocolNameMqttKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceProtocolRule());
	        }
       		setWithLastConsumed($current, "protocolName", lv_protocolName_0_0, "mqtt");
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeviceProtocolAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleDeviceAbilities
entryRuleDeviceAbilities returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceAbilitiesRule()); }
	 iv_ruleDeviceAbilities=ruleDeviceAbilities 
	 { $current=$iv_ruleDeviceAbilities.current; } 
	 EOF 
;

// Rule DeviceAbilities
ruleDeviceAbilities returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceAbilitiesRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDeviceAbilitiesAccess().getDeviceEntityNameEntityNameCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeviceAbilitiesAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAbilitiesAccess().getNameDeviceAbilitiesParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleDeviceAbilities		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceAbilitiesRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"DeviceAbilities");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleInteractionSpec
entryRuleInteractionSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractionSpecRule()); }
	 iv_ruleInteractionSpec=ruleInteractionSpec 
	 { $current=$iv_ruleInteractionSpec.current; } 
	 EOF 
;

// Rule InteractionSpec
ruleInteractionSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='resources' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInteractionSpecAccess().getResourcesKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractionSpecAccess().getColonKeyword_1());
    }
	otherlv_2='userInteractions' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractionSpecAccess().getUserInteractionsKeyword_2());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInteractionSpecAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionSpecAccess().getInteractionNameEntityNameParserRuleCall_4_0()); 
	    }
		lv_interactionName_4_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionSpecRule());
	        }
       		set(
       			$current, 
       			"interactionName",
        		lv_interactionName_4_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionSpecAccess().getInteractionCommandCommandParserRuleCall_5_0()); 
	    }
		lv_interactionCommand_5_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionSpecRule());
	        }
       		add(
       			$current, 
       			"interactionCommand",
        		lv_interactionCommand_5_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionSpecAccess().getInteractionRequestRequestParserRuleCall_6_0()); 
	    }
		lv_interactionRequest_6_0=ruleRequest		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionSpecRule());
	        }
       		add(
       			$current, 
       			"interactionRequest",
        		lv_interactionRequest_6_0, 
        		"Request");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionSpecAccess().getInteractionNotifyInteractionActionParserRuleCall_7_0()); 
	    }
		lv_interactionNotify_7_0=ruleInteractionAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionSpecRule());
	        }
       		add(
       			$current, 
       			"interactionNotify",
        		lv_interactionNotify_7_0, 
        		"InteractionAction");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleInteractionAction
entryRuleInteractionAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractionActionRule()); }
	 iv_ruleInteractionAction=ruleInteractionAction 
	 { $current=$iv_ruleInteractionAction.current; } 
	 EOF 
;

// Rule InteractionAction
ruleInteractionAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='notify' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInteractionActionAccess().getNotifyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionActionAccess().getActionNameActionNameParserRuleCall_1_0()); 
	    }
		lv_actionName_1_0=ruleActionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionActionRule());
	        }
       		set(
       			$current, 
       			"actionName",
        		lv_actionName_1_0, 
        		"ActionName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractionActionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionActionAccess().getParametersParametersParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionActionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"Parameters");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteractionActionAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='from' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInteractionActionAccess().getFromKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionActionRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getInteractionActionAccess().getInteractionEntityEntityNameCrossReference_6_0()); 
	}

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInteractionActionAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleArchSpec
entryRuleArchSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchSpecRule()); }
	 iv_ruleArchSpec=ruleArchSpec 
	 { $current=$iv_ruleArchSpec.current; } 
	 EOF 
;

// Rule ArchSpec
ruleArchSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='structs' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArchSpecAccess().getStructsKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArchSpecAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArchSpecAccess().getStructsStructParserRuleCall_0_2_0()); 
	    }
		lv_structs_2_0=ruleStruct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchSpecRule());
	        }
       		add(
       			$current, 
       			"structs",
        		lv_structs_2_0, 
        		"Struct");
	        afterParserOrEnumRuleCall();
	    }

)
)+)*	otherlv_3='softwareComponents' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArchSpecAccess().getSoftwareComponentsKeyword_1());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArchSpecAccess().getColonKeyword_2());
    }
	otherlv_5='computationalService' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArchSpecAccess().getComputationalServiceKeyword_3());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArchSpecAccess().getColonKeyword_4());
    }
(	otherlv_7='InBuilt' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArchSpecAccess().getInBuiltKeyword_5_0());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getArchSpecAccess().getColonKeyword_5_1());
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getArchSpecAccess().getInbuiltComputationalServiceInBuiltComputationalServiceParserRuleCall_6_0()); 
	    }
		lv_inbuiltComputationalService_9_0=ruleInBuiltComputationalService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchSpecRule());
	        }
       		add(
       			$current, 
       			"inbuiltComputationalService",
        		lv_inbuiltComputationalService_9_0, 
        		"InBuiltComputationalService");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='Custom' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getArchSpecAccess().getCustomKeyword_7());
    }
	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getArchSpecAccess().getColonKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArchSpecAccess().getCustomComputationalServiceCustomComputationalServiceParserRuleCall_9_0()); 
	    }
		lv_customComputationalService_12_0=rulecustomComputationalService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchSpecRule());
	        }
       		add(
       			$current, 
       			"customComputationalService",
        		lv_customComputationalService_12_0, 
        		"customComputationalService");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleInBuiltComputationalService
entryRuleInBuiltComputationalService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInBuiltComputationalServiceRule()); }
	 iv_ruleInBuiltComputationalService=ruleInBuiltComputationalService 
	 { $current=$iv_ruleInBuiltComputationalService.current; } 
	 EOF 
;

// Rule InBuiltComputationalService
ruleInBuiltComputationalService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getInBuiltComputationalServiceNameEntityNameParserRuleCall_0_0()); 
	    }
		lv_inBuiltComputationalServiceName_0_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
	        }
       		set(
       			$current, 
       			"inBuiltComputationalServiceName",
        		lv_inBuiltComputationalServiceName_0_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getConsumesConsumeForInBuiltParserRuleCall_1_0()); 
	    }
		lv_consumes_1_0=ruleConsumeForInBuilt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
	        }
       		add(
       			$current, 
       			"consumes",
        		lv_consumes_1_0, 
        		"ConsumeForInBuilt");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='COMPUTE' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInBuiltComputationalServiceAccess().getCOMPUTEKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInBuiltComputationalServiceAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getOperationNameOperationNameParserRuleCall_4_0()); 
	    }
		lv_operationName_4_0=ruleOperationName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
	        }
       		set(
       			$current, 
       			"operationName",
        		lv_operationName_4_0, 
        		"OperationName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInBuiltComputationalServiceAccess().getCommaKeyword_5_0());
    }
(
(
		lv_operationParameter_6_0=RULE_INT
		{
			newLeafNode(lv_operationParameter_6_0, grammarAccess.getInBuiltComputationalServiceAccess().getOperationParameterINTTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInBuiltComputationalServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operationParameter",
        		lv_operationParameter_6_0, 
        		"INT");
	    }

)
))?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInBuiltComputationalServiceAccess().getRightParenthesisKeyword_6());
    }
	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInBuiltComputationalServiceAccess().getSemicolonKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getGenerateInfoGenerateParserRuleCall_8_0()); 
	    }
		lv_generateInfo_9_0=ruleGenerate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
	        }
       		add(
       			$current, 
       			"generateInfo",
        		lv_generateInfo_9_0, 
        		"Generate");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulecustomComputationalService
entryRulecustomComputationalService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomComputationalServiceRule()); }
	 iv_rulecustomComputationalService=rulecustomComputationalService 
	 { $current=$iv_rulecustomComputationalService.current; } 
	 EOF 
;

// Rule customComputationalService
rulecustomComputationalService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getCustomComputationalServiceNameEntityNameParserRuleCall_0_0()); 
	    }
		lv_customComputationalServiceName_0_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
	        }
       		set(
       			$current, 
       			"customComputationalServiceName",
        		lv_customComputationalServiceName_0_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getConsumesConsumeParserRuleCall_1_0()); 
	    }
		lv_consumes_1_0=ruleConsume		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
	        }
       		add(
       			$current, 
       			"consumes",
        		lv_consumes_1_0, 
        		"Consume");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getRequestsRequestParserRuleCall_2_0()); 
	    }
		lv_requests_2_0=ruleRequest		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
	        }
       		add(
       			$current, 
       			"requests",
        		lv_requests_2_0, 
        		"Request");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getGenerateInfoGenerateParserRuleCall_3_0()); 
	    }
		lv_generateInfo_3_0=ruleGenerate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
	        }
       		add(
       			$current, 
       			"generateInfo",
        		lv_generateInfo_3_0, 
        		"Generate");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getCommandsCommandParserRuleCall_4_0()); 
	    }
		lv_commands_4_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_4_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleRequest
entryRuleRequest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequestRule()); }
	 iv_ruleRequest=ruleRequest 
	 { $current=$iv_ruleRequest.current; } 
	 EOF 
;

// Rule Request
ruleRequest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='request' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequestAccess().getRequestKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequestRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRequestAccess().getRequestnameSourceNameCrossReference_1_0()); 
	}

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequestAccess().getToKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequestRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRequestAccess().getStorageForRequestEntityNameCrossReference_3_0()); 
	}

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequestAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleConsumeForInBuilt
entryRuleConsumeForInBuilt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConsumeForInBuiltRule()); }
	 iv_ruleConsumeForInBuilt=ruleConsumeForInBuilt 
	 { $current=$iv_ruleConsumeForInBuilt.current; } 
	 EOF 
;

// Rule ConsumeForInBuilt
ruleConsumeForInBuilt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='consume' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConsumeForInBuiltAccess().getConsumeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConsumeForInBuiltRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getConsumeForInBuiltAccess().getNameSourceNameCrossReference_1_0()); 
	}

)
)	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConsumeForInBuiltAccess().getFromKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConsumeForInBuiltRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getConsumeForInBuiltAccess().getSensorForConsumeEntityNameCrossReference_3_0()); 
	}

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConsumeForInBuiltAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleConsume
entryRuleConsume returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConsumeRule()); }
	 iv_ruleConsume=ruleConsume 
	 { $current=$iv_ruleConsume.current; } 
	 EOF 
;

// Rule Consume
ruleConsume returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='consume' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConsumeAccess().getConsumeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConsumeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getConsumeAccess().getNameSourceNameCrossReference_1_0()); 
	}

)
)	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConsumeAccess().getFromKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConsumeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getConsumeAccess().getFromNameEntityNameCrossReference_3_0()); 
	}

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConsumeAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='command' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommandAccess().getCommandKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getCommandNameActionNameCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandAccess().getCommandparameterCommandParameterParserRuleCall_3_0()); 
	    }
		lv_commandparameter_3_0=ruleCommandParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandRule());
	        }
       		set(
       			$current, 
       			"commandparameter",
        		lv_commandparameter_3_0, 
        		"CommandParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCommandAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCommandAccess().getToKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getCommandAccess().getActuatorForCommandEntityNameCrossReference_6_0()); 
	}

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCommandAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleCommandParameter
entryRuleCommandParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandParameterRule()); }
	 iv_ruleCommandParameter=ruleCommandParameter 
	 { $current=$iv_ruleCommandParameter.current; } 
	 EOF 
;

// Rule CommandParameter
ruleCommandParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandParameterRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getCommandParameterAccess().getNameParameterNameCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommandParameterAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandParameterAccess().getParameterCommandParameterParserRuleCall_1_1_0()); 
	    }
		lv_parameter_2_0=ruleCommandParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandParameterRule());
	        }
       		set(
       			$current, 
       			"parameter",
        		lv_parameter_2_0, 
        		"CommandParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleVocSpec
entryRuleVocSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVocSpecRule()); }
	 iv_ruleVocSpec=ruleVocSpec 
	 { $current=$iv_ruleVocSpec.current; } 
	 EOF 
;

// Rule VocSpec
ruleVocSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='structs' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVocSpecAccess().getStructsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVocSpecAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVocSpecAccess().getStructsStructParserRuleCall_2_0()); 
	    }
		lv_structs_2_0=ruleStruct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVocSpecRule());
	        }
       		add(
       			$current, 
       			"structs",
        		lv_structs_2_0, 
        		"Struct");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='resources' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVocSpecAccess().getResourcesKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVocSpecAccess().getColonKeyword_4());
    }
	otherlv_5='sensors' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVocSpecAccess().getSensorsKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVocSpecAccess().getColonKeyword_6());
    }
	otherlv_7='periodicSensors' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVocSpecAccess().getPeriodicSensorsKeyword_7());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVocSpecAccess().getColonKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVocSpecAccess().getPeriodicSensorsPeriodicSensorsParserRuleCall_9_0()); 
	    }
		lv_periodicSensors_9_0=rulePeriodicSensors		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVocSpecRule());
	        }
       		add(
       			$current, 
       			"periodicSensors",
        		lv_periodicSensors_9_0, 
        		"PeriodicSensors");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='eventDrivenSensors' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVocSpecAccess().getEventDrivenSensorsKeyword_10());
    }
	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVocSpecAccess().getColonKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVocSpecAccess().getEventSensorsEventSensorsParserRuleCall_12_0()); 
	    }
		lv_eventSensors_12_0=ruleEventSensors		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVocSpecRule());
	        }
       		add(
       			$current, 
       			"eventSensors",
        		lv_eventSensors_12_0, 
        		"EventSensors");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='actuators' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVocSpecAccess().getActuatorsKeyword_13());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVocSpecAccess().getColonKeyword_14());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVocSpecAccess().getActuatorsActuatorParserRuleCall_15_0()); 
	    }
		lv_actuators_15_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVocSpecRule());
	        }
       		add(
       			$current, 
       			"actuators",
        		lv_actuators_15_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='storages' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVocSpecAccess().getStoragesKeyword_16());
    }
	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getVocSpecAccess().getColonKeyword_17());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVocSpecAccess().getStorageServiceStorageServiceParserRuleCall_18_0()); 
	    }
		lv_storageService_18_0=ruleStorageService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVocSpecRule());
	        }
       		add(
       			$current, 
       			"storageService",
        		lv_storageService_18_0, 
        		"StorageService");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;







// Entry rule entryRuleRegionLabel
entryRuleRegionLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegionLabelRule()); }
	 iv_ruleRegionLabel=ruleRegionLabel 
	 { $current=$iv_ruleRegionLabel.current; } 
	 EOF 
;

// Rule RegionLabel
ruleRegionLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRegionLabelAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegionLabelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleStruct
entryRuleStruct returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructRule()); }
	 iv_ruleStruct=ruleStruct 
	 { $current=$iv_ruleStruct.current; } 
	 EOF 
;

// Rule Struct
ruleStruct returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getStructAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStructAccess().getFieldsFieldParserRuleCall_1_0()); 
	    }
		lv_fields_1_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_1_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRulePeriodicSensors
entryRulePeriodicSensors returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPeriodicSensorsRule()); }
	 iv_rulePeriodicSensors=rulePeriodicSensors 
	 { $current=$iv_rulePeriodicSensors.current; } 
	 EOF 
;

// Rule PeriodicSensors
rulePeriodicSensors returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicSensorsAccess().getSensorNameEntityNameParserRuleCall_0_0()); 
	    }
		lv_sensorName_0_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicSensorsRule());
	        }
       		set(
       			$current, 
       			"sensorName",
        		lv_sensorName_0_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicSensorsAccess().getGenerateInfoGenerateParserRuleCall_1_0()); 
	    }
		lv_generateInfo_1_0=ruleGenerate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicSensorsRule());
	        }
       		add(
       			$current, 
       			"generateInfo",
        		lv_generateInfo_1_0, 
        		"Generate");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='sample' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPeriodicSensorsAccess().getSampleKeyword_2());
    }
	otherlv_3='period' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPeriodicSensorsAccess().getPeriodKeyword_3());
    }
this_INT_4=RULE_INT
    { 
    newLeafNode(this_INT_4, grammarAccess.getPeriodicSensorsAccess().getINTTerminalRuleCall_4()); 
    }
	otherlv_5='for' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPeriodicSensorsAccess().getForKeyword_5());
    }
this_INT_6=RULE_INT
    { 
    newLeafNode(this_INT_6, grammarAccess.getPeriodicSensorsAccess().getINTTerminalRuleCall_6()); 
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPeriodicSensorsAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleEventSensors
entryRuleEventSensors returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventSensorsRule()); }
	 iv_ruleEventSensors=ruleEventSensors 
	 { $current=$iv_ruleEventSensors.current; } 
	 EOF 
;

// Rule EventSensors
ruleEventSensors returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEventSensorsAccess().getSensorNameEntityNameParserRuleCall_0_0()); 
	    }
		lv_sensorName_0_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventSensorsRule());
	        }
       		set(
       			$current, 
       			"sensorName",
        		lv_sensorName_0_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventSensorsAccess().getGenerateInfoGenerateParserRuleCall_1_0()); 
	    }
		lv_generateInfo_1_0=ruleGenerate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventSensorsRule());
	        }
       		add(
       			$current, 
       			"generateInfo",
        		lv_generateInfo_1_0, 
        		"Generate");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='onCondition' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEventSensorsAccess().getOnConditionKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventSensorsAccess().getEventConditionsEventConditionsParserRuleCall_3_0()); 
	    }
		lv_eventConditions_3_0=ruleEventConditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventSensorsRule());
	        }
       		add(
       			$current, 
       			"eventConditions",
        		lv_eventConditions_3_0, 
        		"EventConditions");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventSensorsAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleEventConditions
entryRuleEventConditions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventConditionsRule()); }
	 iv_ruleEventConditions=ruleEventConditions 
	 { $current=$iv_ruleEventConditions.current; } 
	 EOF 
;

// Rule EventConditions
ruleEventConditions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEventConditionsAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventConditionsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventConditionsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventConditionsAccess().getEventConditionsEventConditionsParserRuleCall_1_1_0()); 
	    }
		lv_eventConditions_2_0=ruleEventConditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventConditionsRule());
	        }
       		add(
       			$current, 
       			"eventConditions",
        		lv_eventConditions_2_0, 
        		"EventConditions");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;







// Entry rule entryRuleEntityName
entryRuleEntityName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityNameRule()); }
	 iv_ruleEntityName=ruleEntityName 
	 { $current=$iv_ruleEntityName.current; } 
	 EOF 
;

// Rule EntityName
ruleEntityName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEntityNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleGenerate
entryRuleGenerate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateRule()); }
	 iv_ruleGenerate=ruleGenerate 
	 { $current=$iv_ruleGenerate.current; } 
	 EOF 
;

// Rule Generate
ruleGenerate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='generate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGenerateAccess().getGenerateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGenerateAccess().getSourceNameSourceNameParserRuleCall_1_0()); 
	    }
		lv_sourceName_1_0=ruleSourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGenerateRule());
	        }
       		set(
       			$current, 
       			"sourceName",
        		lv_sourceName_1_0, 
        		"SourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGenerateAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGenerateAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGenerateRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGenerateAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleSourceName
entryRuleSourceName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourceNameRule()); }
	 iv_ruleSourceName=ruleSourceName 
	 { $current=$iv_ruleSourceName.current; } 
	 EOF 
;

// Rule SourceName
ruleSourceName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSourceNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourceNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	 iv_ruleActuator=ruleActuator 
	 { $current=$iv_ruleActuator.current; } 
	 EOF 
;

// Rule Actuator
ruleActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getActuatorAccess().getActuatorNameEntityNameParserRuleCall_0_0()); 
	    }
		lv_actuatorName_0_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActuatorRule());
	        }
       		set(
       			$current, 
       			"actuatorName",
        		lv_actuatorName_0_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActuatorAccess().getActionsActionParserRuleCall_1_0()); 
	    }
		lv_actions_1_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActuatorRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_1_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='action' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getActionNameActionNameParserRuleCall_1_0()); 
	    }
		lv_actionName_1_0=ruleActionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"actionName",
        		lv_actionName_1_0, 
        		"ActionName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParametersParametersParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"Parameters");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActionAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getActionAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleActionName
entryRuleActionName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionNameRule()); }
	 iv_ruleActionName=ruleActionName 
	 { $current=$iv_ruleActionName.current; } 
	 EOF 
;

// Rule ActionName
ruleActionName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getActionNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	 iv_ruleParameters=ruleParameters 
	 { $current=$iv_ruleParameters.current; } 
	 EOF 
;

// Rule Parameters
ruleParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParametersAccess().getParameterNameParameterNameParserRuleCall_0_0()); 
	    }
		lv_parameterName_0_0=ruleParameterName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametersRule());
	        }
       		set(
       			$current, 
       			"parameterName",
        		lv_parameterName_0_0, 
        		"ParameterName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametersAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametersRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameterName
entryRuleParameterName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterNameRule()); }
	 iv_ruleParameterName=ruleParameterName 
	 { $current=$iv_ruleParameterName.current; } 
	 EOF 
;

// Rule ParameterName
ruleParameterName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getParameterNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleStorageService
entryRuleStorageService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStorageServiceRule()); }
	 iv_ruleStorageService=ruleStorageService 
	 { $current=$iv_ruleStorageService.current; } 
	 EOF 
;

// Rule StorageService
ruleStorageService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStorageServiceAccess().getStorageServiceNameEntityNameParserRuleCall_0_0()); 
	    }
		lv_storageServiceName_0_0=ruleEntityName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStorageServiceRule());
	        }
       		set(
       			$current, 
       			"storageServiceName",
        		lv_storageServiceName_0_0, 
        		"EntityName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStorageServiceAccess().getDataAccessesDataAccessParserRuleCall_1_0()); 
	    }
		lv_dataAccesses_1_0=ruleDataAccess		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStorageServiceRule());
	        }
       		add(
       			$current, 
       			"dataAccesses",
        		lv_dataAccesses_1_0, 
        		"DataAccess");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleDataAccess
entryRuleDataAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataAccessRule()); }
	 iv_ruleDataAccess=ruleDataAccess 
	 { $current=$iv_ruleDataAccess.current; } 
	 EOF 
;

// Rule DataAccess
ruleDataAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='generate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataAccessAccess().getGenerateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessAccess().getSourceNameSourceNameParserRuleCall_1_0()); 
	    }
		lv_sourceName_1_0=ruleSourceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessRule());
	        }
       		set(
       			$current, 
       			"sourceName",
        		lv_sourceName_1_0, 
        		"SourceName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataAccessAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessAccess().getDataAccessTypeTypeParserRuleCall_3_0()); 
	    }
		lv_dataAccessType_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessRule());
	        }
       		set(
       			$current, 
       			"dataAccessType",
        		lv_dataAccessType_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='accessed-by' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataAccessAccess().getAccessedByKeyword_4());
    }
(
(
		lv_dataItem_5_0=RULE_ID
		{
			newLeafNode(lv_dataItem_5_0, grammarAccess.getDataAccessAccess().getDataItemIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dataItem",
        		lv_dataItem_5_0, 
        		"ID");
	    }

)
)	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataAccessAccess().getColonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessAccess().getTypeTypeParserRuleCall_7_0()); 
	    }
		lv_type_7_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataAccessAccess().getSemicolonKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessAccess().getActionsActionParserRuleCall_9_0()); 
	    }
		lv_actions_9_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_9_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getPrimitiveDataTypePrimitiveDataTypeParserRuleCall_0()); 
	    }
		lv_primitiveDataType_0_0=rulePrimitiveDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"primitiveDataType",
        		lv_primitiveDataType_0_0, 
        		"PrimitiveDataType");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleOperationName
entryRuleOperationName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationNameRule()); }
	 iv_ruleOperationName=ruleOperationName 
	 { $current=$iv_ruleOperationName.current; } 
	 EOF 
;

// Rule OperationName
ruleOperationName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_OPERATION_NAME_0_0=	'AVG_BY_SAMPLE' 
    {
        newLeafNode(lv_OPERATION_NAME_0_0, grammarAccess.getOperationNameAccess().getOPERATION_NAMEAVG_BY_SAMPLEKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationNameRule());
	        }
       		setWithLastConsumed($current, "OPERATION_NAME", lv_OPERATION_NAME_0_0, "AVG_BY_SAMPLE");
	    }

)
)
;





// Entry rule entryRulePrimitiveDataType
entryRulePrimitiveDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveDataTypeRule()); }
	 iv_rulePrimitiveDataType=rulePrimitiveDataType 
	 { $current=$iv_rulePrimitiveDataType.current; } 
	 EOF 
;

// Rule PrimitiveDataType
rulePrimitiveDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_INTEGER_0_0=	'Integer' 
    {
        newLeafNode(lv_INTEGER_0_0, grammarAccess.getPrimitiveDataTypeAccess().getINTEGERIntegerKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
	        }
       		setWithLastConsumed($current, "INTEGER", lv_INTEGER_0_0, "Integer");
	    }

)
)
    |(
(
		lv_BOOLEAN_1_0=	'boolean' 
    {
        newLeafNode(lv_BOOLEAN_1_0, grammarAccess.getPrimitiveDataTypeAccess().getBOOLEANBooleanKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
	        }
       		setWithLastConsumed($current, "BOOLEAN", lv_BOOLEAN_1_0, "boolean");
	    }

)
)
    |(
(
		lv_STRING_2_0=	'String' 
    {
        newLeafNode(lv_STRING_2_0, grammarAccess.getPrimitiveDataTypeAccess().getSTRINGStringKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
	        }
       		setWithLastConsumed($current, "STRING", lv_STRING_2_0, "String");
	    }

)
)
    |(
(
		lv_LONG_3_0=	'long' 
    {
        newLeafNode(lv_LONG_3_0, grammarAccess.getPrimitiveDataTypeAccess().getLONGLongKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
	        }
       		setWithLastConsumed($current, "LONG", lv_LONG_3_0, "long");
	    }

)
)
    |(
(
		lv_DOUBLE_4_0=	'double' 
    {
        newLeafNode(lv_DOUBLE_4_0, grammarAccess.getPrimitiveDataTypeAccess().getDOUBLEDoubleKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
	        }
       		setWithLastConsumed($current, "DOUBLE", lv_DOUBLE_4_0, "double");
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getPrimitiveDataTypeAccess().getStructDefStructCrossReference_5_0()); 
	}

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


